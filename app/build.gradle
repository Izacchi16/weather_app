plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.weatherapp"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.fragment:fragment-ktx:1.4.1"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0"

    // Okhttp
    implementation "com.squareup.okhttp3:okhttp:4.9.3"

    // retrofit2
    implementation "com.squareup.retrofit2:retrofit:2.9.0"

    // DataStore
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

allprojects {
    project.with {
        configurations {
            ktlint
        }

        dependencies {
            // ktlint
            ktlint "com.pinterest:ktlint:0.45.1"
        }

        // Danger用にxmlを出力するtask
        task ktlint(type: JavaExec, group: "verification") {
            description = "Check Kotlin code style."
            classpath = configurations.ktlint
            mainClass.set("com.pinterest.ktlint.Main")
            args "src/**/*.kt"
            // to generate report in checkstyle format prepend following args:
            // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
            // to add a baseline to check against prepend following args:
            // "--baseline=ktlint-baseline.xml"
            // see https://github.com/pinterest/ktlint#usage for more
        }

        // lintエラーからリフォーマットするタスク
        task ktlintFormat(type: JavaExec, group: "formatting") {
            description = "Fix Kotlin code style deviations."
            classpath = configurations.ktlint
            mainClass.set("com.pinterest.ktlint.Main")
            args "-F", "src/**/*.kt"
        }
    }
}
